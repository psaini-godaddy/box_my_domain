{"ast":null,"code":"var _jsxFileName = \"/Users/psaini/Documents/GitHub/box_my_domain/src/domainality/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Box, Typography, CircularProgress } from '@mui/material';\nimport { Button, Input, Divider } from '@mui/joy';\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined';\nimport { useSpring, animated } from '@react-spring/web';\nimport axios from 'axios';\nimport LoadingPage from './LoadingPage';\nimport './App.css';\nimport TipsAndUpdatesTwoToneIcon from '@mui/icons-material/TipsAndUpdatesTwoTone';\nimport ListCard from './ListCard';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport PinterestIcon from '@mui/icons-material/Pinterest';\nimport GiftBox from \"./GiftBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadCard = ({\n  imageData,\n  handleDrop,\n  handleImageSubmit,\n  handleQuestion\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  className: \"modal\",\n  children: [/*#__PURE__*/_jsxDEV(Box, {\n    className: \"image-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Your Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please upload an image or skip this step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: \"drag-drop-area\",\n    onDragOver: e => e.preventDefault(),\n    onDrop: handleDrop,\n    children: imageData ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageData,\n      alt: \"Preview\",\n      className: \"uploaded-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AddAPhotoOutlinedIcon, {\n        style: {\n          fontSize: '40px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \" Drag and drop an image here, or click to upload\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n    orientation: \"horizontal\",\n    children: \"OR \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: \"image-text\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Paste your image link\",\n      variant: \"soft\",\n      size: \"lg\",\n      style: {\n        height: '50px',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        marginTop: '20px',\n        textAlign: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hidden\",\n        children: /*#__PURE__*/_jsxDEV(InstagramIcon, {\n          style: {\n            fontSize: '40px',\n            color: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hidden\",\n        children: /*#__PURE__*/_jsxDEV(PinterestIcon, {\n          style: {\n            fontSize: '40px',\n            color: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button image-button\",\n      style: {\n        float: \"right\"\n      },\n      onClick: handleQuestion,\n      children: \"Skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button image-button\",\n      style: {\n        float: \"right\"\n      },\n      onClick: handleImageSubmit,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = ImageUploadCard;\nconst QuestionCard = ({\n  question,\n  options,\n  handleOptionClick,\n  progress\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  className: \"modal question-card\",\n  children: [/*#__PURE__*/_jsxDEV(Box, {\n    className: \"progress-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      value: progress,\n      size: 150,\n      thickness: 3,\n      sx: {\n        strokeColor: 'gray',\n        color: '#01a4a6' // Set the custom color here\n      },\n      style: {\n        margin: '0 auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      component: \"div\",\n      color: \"textSecondary\",\n      style: {\n        position: 'absolute',\n        top: '125px',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        fontSize: '30px'\n      },\n      children: `${Math.round(progress)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: \"question-title-container\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"question-title\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: \"grid-container\",\n    children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Box, {\n      className: \"option-button\",\n      onClick: () => handleOptionClick(option),\n      children: option\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n_c2 = QuestionCard;\nconst DomainTestCard = ({\n  handleQuestion,\n  handleClose\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  className: \"modal\",\n  children: [/*#__PURE__*/_jsxDEV(Box, {\n    className: \"question-title\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Do you want to take a quick domainality test?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleQuestion,\n      children: \"Start Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleClose,\n      children: \"Next Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 3\n}, this);\n_c3 = DomainTestCard;\nconst UserInput = ({\n  handleSend\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleInputChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSendClick = () => {\n    handleSend(message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"text-title\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/pic.png\",\n        className: \"info-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: handleInputChange,\n        placeholder: \" Spill the tea\\u2014why are you here?\",\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button text-button\",\n          onClick: handleSendClick,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInput, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c4 = UserInput;\nconst App = () => {\n  _s2();\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [optionClicked, setOptionClicked] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(5);\n  const [imageData, setImageData] = useState(null);\n  const [showDomainTestPopup, setShowDomainTestPopup] = useState(false);\n  const [image, setImage] = useState(true);\n  const [userInput, setUserInput] = useState(false);\n  const [isLast, setIsLast] = useState(false);\n  const [imageRaw, setImageRaw] = useState(null);\n  const [imageFlag, setImageFlag] = useState(false);\n  const questionCardAnimation = useSpring({\n    opacity: loading,\n    transform: loading ? 'translateY(-20px)' : 'translateY(0)',\n    config: {\n      duration: 500\n    }\n  });\n  const [userOption, setUserOption] = useState(null);\n  const handleOpen = async () => {\n    setOpen(true);\n    setImage(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    window.location.reload();\n    const response = axios.post('http://localhost:5000/reset', {}, {\n      withCredentials: true\n    });\n  };\n  const handleSendMessage = async text => {\n    setUserInput(false);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message: userOption,\n        textInput: text\n      }, {\n        withCredentials: true\n      });\n      const data = response.data;\n      if (data.content.options && typeof data.content.options === 'object') {\n        console.log('Options:', data.content.options);\n        data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n      }\n      setData(data.content);\n      console.log('Response:', data);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n    setLoading(false);\n    setIsLast(false);\n    setUserInput(false);\n  };\n  const fetchQuestion = async selectedOption => {\n    setLoading(true);\n    if (imageFlag) {\n      setTotalQuestions(2);\n      console.log('Fetching question with image...', selectedOption);\n      const formData = new FormData();\n      formData.append('image', imageRaw);\n      const response = await fetch(`http://localhost:5001/image?message=${encodeURIComponent(selectedOption)}`, {\n        method: 'POST',\n        body: formData,\n        // FormData automatically sets the correct headers\n        credentials: 'include'\n      });\n      const data = await response.json();\n      console.log('Raw Response:', data);\n      if (data.content.options && typeof data.content.options === 'object') {\n        console.log('Options:', data.content.options);\n        data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n      }\n      setData(data.content);\n      setLoading(false);\n      return;\n    }\n    if (isLast) {\n      setUserInput(true);\n      return;\n    }\n    console.log('Fetching question...', selectedOption);\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message: selectedOption // Send the selected option as a JSON object\n      }, {\n        withCredentials: true\n      });\n\n      // Process options if they are an object\n      const data = response.data;\n      console.log('Raw Response:', data);\n      if (data.content.options && typeof data.content.options === 'object') {\n        console.log('Options:', data.content.options);\n        data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n      }\n      setData(data.content); // Update the state with the processed data\n      setIsLast(data.isLast);\n      console.log('Processed Response:', data);\n    } catch (error) {\n      console.error('Error fetching question:', error);\n    }\n    setLoading(false);\n  };\n  const progress = optionClicked / totalQuestions * 100;\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    const reader = new FileReader();\n    setImageRaw(file);\n    reader.onload = e => {\n      setImageData(e.target.result); // Base64 encoded image data\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleImageSubmit = async () => {\n    setLoading(true);\n    setImage(false);\n    if (imageRaw) {\n      // Create a FormData object to hold the image data\n      const formData = new FormData();\n      formData.append('image', imageRaw); // 'image' is the key expected by the Flask backend\n      console.log(imageRaw instanceof File);\n      try {\n        // Send the image data to the Flask backend\n        const response = await fetch('http://localhost:5001/image', {\n          method: 'POST',\n          body: formData,\n          // FormData automatically sets the correct headers\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          console.error('Failed to send image data');\n          console.log(await response.json()); // Log the backend response for debugging\n          return;\n        }\n        const data = await response.json();\n        console.log(data);\n        if (data.content.options && typeof data.content.options === 'object') {\n          console.log('Options:', data.content.options);\n          data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n        }\n        console.log(data.content);\n        setData(data.content);\n        setImageFlag(true);\n        setLoading(false);\n        console.log(data);\n        console.log('Image successfully sent');\n      } catch (error) {\n        console.error('Error sending image data:', error);\n      }\n    }\n  };\n  const handleOptionClick = async option => {\n    setUserOption(option);\n    setOptionClicked(prev => prev + 1);\n    if (option !== null && option !== undefined) {\n      console.log(`Option selected: ${option}`);\n      await fetchQuestion(option); // Proceed to the next step only if option is valid\n    } else {\n      console.log(`Option selected: ${option}`);\n      await fetchQuestion();\n    }\n  };\n  const handleQuestion = async () => {\n    setImage(false);\n    setShowDomainTestPopup(false);\n    await fetchQuestion('start');\n    // setUserInput(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GiftBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      className: \"modal-container\",\n      children: image ? /*#__PURE__*/_jsxDEV(ImageUploadCard, {\n        imageData: imageData,\n        handleDrop: handleDrop,\n        handleImageSubmit: handleImageSubmit,\n        handleQuestion: handleQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this) : userInput ? /*#__PURE__*/_jsxDEV(UserInput, {\n        handleSend: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this) : loading ? /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this) : data ? data.recommended_domains ? /*#__PURE__*/_jsxDEV(ListCard, {\n        guesses: data.recommended_domains\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(animated.div, {\n        style: questionCardAnimation,\n        children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n          question: data.chat,\n          options: data.options,\n          handleOptionClick: handleOptionClick,\n          progress: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }, this) : showDomainTestPopup ? /*#__PURE__*/_jsxDEV(DomainTestCard, {\n        handleClose: handleClose,\n        handleQuestion: handleQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"MBLlShrdZtRBDKWsAQP9L0y6Ha0=\", false, function () {\n  return [useSpring];\n});\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ImageUploadCard\");\n$RefreshReg$(_c2, \"QuestionCard\");\n$RefreshReg$(_c3, \"DomainTestCard\");\n$RefreshReg$(_c4, \"UserInput\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","Modal","Box","Typography","CircularProgress","Button","Input","Divider","AddAPhotoOutlinedIcon","useSpring","animated","axios","LoadingPage","TipsAndUpdatesTwoToneIcon","ListCard","InstagramIcon","PinterestIcon","GiftBox","jsxDEV","_jsxDEV","ImageUploadCard","imageData","handleDrop","handleImageSubmit","handleQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","e","preventDefault","onDrop","src","alt","style","fontSize","orientation","placeholder","variant","size","height","marginTop","textAlign","color","float","onClick","_c","QuestionCard","question","options","handleOptionClick","progress","value","thickness","sx","strokeColor","margin","display","component","position","top","left","transform","Math","round","map","option","index","_c2","DomainTestCard","handleClose","_c3","UserInput","handleSend","_s","message","setMessage","handleInputChange","event","target","handleSendClick","type","onChange","_c4","App","_s2","open","setOpen","data","setData","loading","setLoading","optionClicked","setOptionClicked","totalQuestions","setTotalQuestions","setImageData","showDomainTestPopup","setShowDomainTestPopup","image","setImage","userInput","setUserInput","isLast","setIsLast","imageRaw","setImageRaw","imageFlag","setImageFlag","questionCardAnimation","opacity","config","duration","userOption","setUserOption","handleOpen","window","location","reload","response","post","withCredentials","handleSendMessage","text","textInput","content","console","log","Object","entries","key","error","fetchQuestion","selectedOption","formData","FormData","append","fetch","encodeURIComponent","method","body","credentials","json","file","dataTransfer","files","reader","FileReader","onload","result","readAsDataURL","File","ok","prev","undefined","onClose","recommended_domains","guesses","div","chat","_c5","$RefreshReg$"],"sources":["/Users/psaini/Documents/GitHub/box_my_domain/src/domainality/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Box, Typography, CircularProgress } from '@mui/material';\nimport {Button, Input, Divider} from '@mui/joy';\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined';\nimport { useSpring, animated } from '@react-spring/web';\nimport axios from 'axios';\nimport LoadingPage from './LoadingPage';\nimport './App.css';\nimport TipsAndUpdatesTwoToneIcon from '@mui/icons-material/TipsAndUpdatesTwoTone';\nimport ListCard from './ListCard';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport PinterestIcon from '@mui/icons-material/Pinterest';\nimport GiftBox from \"./GiftBox\";\n\nconst ImageUploadCard = ({ imageData, handleDrop, handleImageSubmit, handleQuestion }) => (\n  <Box className=\"modal\">\n    <Box className=\"image-title\">\n      <h3>Upload Your Image</h3>\n      <p>Please upload an image or skip this step</p>\n    </Box>\n    <Box\n      className=\"drag-drop-area\"\n      onDragOver={(e) => e.preventDefault()}\n      onDrop={handleDrop}\n    >\n      {imageData ? (\n        <img src={imageData} alt=\"Preview\" className='uploaded-image' />\n      ) : (\n        <p style={{ fontSize: '30px'}}>\n        <AddAPhotoOutlinedIcon style={{ fontSize: '40px', }}/> Drag and drop an image here, or click to upload\n        </p>\n      )}\n    </Box>\n    <Divider orientation=\"horizontal\">OR </Divider>\n    <Box className='image-text'>\n      <Input placeholder=\"Paste your image link\" variant=\"soft\" size=\"lg\" style ={{ height: '50px', marginTop: '20px'}}>\n      </Input>\n      <Box style={{marginTop:'20px', textAlign:'right'}}>\n      <button className='hidden'><InstagramIcon style={{ fontSize: '40px', color: '#000'}}/></button>\n      <button className='hidden'><PinterestIcon style={{ fontSize: '40px', color: '#000'}}/></button>\n      </Box>\n      </Box>\n    <Box className='footer'>\n      <button className='button image-button' style={{ float: \"right\" }} onClick={handleQuestion}>\n        Skip\n      </button>\n      <button className='button image-button' style={{ float: \"right\" }} onClick={handleImageSubmit}>\n        Next\n      </button>\n    </Box>\n  </Box>\n);\n\nconst QuestionCard = ({ question, options, handleOptionClick, progress}) => (\n  <Box className='modal question-card'>\n    <Box className='progress-bar-container'>\n    <CircularProgress\n        variant=\"determinate\"\n        value={progress}\n        size={150}\n        thickness={3}\n        sx={{\n          strokeColor: 'gray',\n          color: '#01a4a6', // Set the custom color here\n        }}\n        style={{ margin: '0 auto', display: 'block' }}\n      />\n      <Typography\n        variant=\"caption\"\n        component=\"div\"\n        color=\"textSecondary\"\n        style={{\n          position: 'absolute',\n          top: '125px',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          fontSize: '30px',\n        }}\n      >\n        {`${Math.round(progress)}%`}\n      </Typography>\n    </Box>\n    <Box className='question-title-container'>\n    <Box className='question-title'>\n      {question}</Box>\n    </Box>\n    <Box className='grid-container'>\n      {options.map((option, index) => (\n        <Box key={index} className='option-button' onClick={() => handleOptionClick(option)}>\n          {option}\n        </Box>\n      ))}\n    </Box>\n  </Box>\n);\n\nconst DomainTestCard = ({handleQuestion, handleClose}) => (\n  <Box className='modal'>\n    <Box className='question-title'>\n      <p>Do you want to take a quick domainality test?</p>\n    </Box>\n    <Box className='footer'>\n      <button className='button' onClick={handleQuestion}>Start Test</button>\n      <button className='button' onClick={handleClose}>Next Time</button>\n    </Box>\n  </Box>\n);\n\nconst UserInput = ({ handleSend }) => {\n  const [message, setMessage] = useState('');\n\n  const handleInputChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSendClick = () => {\n    handleSend(message);\n    setMessage('');\n  };\n\n  return (\n    <Box className='modal'>\n      <Box className='text-title'>\n      <img src=\"/pic.png\" className=\"info-icon\" />\n      </Box>\n      <Box className='input-container'>\n        <input\n          type='text'\n          value={message}\n          onChange={handleInputChange}\n          placeholder=' Spill the tea—why are you here?'\n          className='text-input'/>\n        <div>\n        <button\n          className=\"button text-button\"\n          onClick={handleSendClick}\n        >\n          Send\n        </button>\n      </div>\n      </Box>\n      <Box className='footer'>\n      \n      </Box>\n    </Box>\n  );\n};\n\nconst App = () => {\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [optionClicked, setOptionClicked] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(5);\n  const [imageData, setImageData] = useState(null);\n  const [showDomainTestPopup, setShowDomainTestPopup] = useState(false);\n  const [image, setImage] = useState(true);\n  const [userInput, setUserInput] = useState(false);\n  const [isLast, setIsLast] = useState(false);\n  const [imageRaw, setImageRaw] = useState(null);\n  const [imageFlag, setImageFlag] = useState(false);\n  const questionCardAnimation = useSpring({\n    opacity: loading,\n    transform: loading ? 'translateY(-20px)' : 'translateY(0)',\n    config: { duration: 500 },\n  });\n  const [userOption, setUserOption] = useState(null);\n\n  const handleOpen = async () => {\n    setOpen(true);\n    setImage(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    window.location.reload();\n    const response = axios.post('http://localhost:5000/reset', {\n    }, { withCredentials: true });\n  };\n  const handleSendMessage = async (text) => {\n    setUserInput(false);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message: userOption,\n        textInput: text\n      }, { withCredentials: true });\n\n      const data = response.data;\n      if (data.content.options && typeof data.content.options === 'object') {\n        console.log('Options:', data.content.options);\n        data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n      }\n      setData(data.content);\n      console.log('Response:', data);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n    setLoading(false);\n    setIsLast(false);\n    setUserInput(false);\n  };\n  \n  const fetchQuestion = async (selectedOption) => {\n    setLoading(true);\n    if (imageFlag) {\n      setTotalQuestions(2);\n      console.log('Fetching question with image...', selectedOption);\n      const formData = new FormData();\n      formData.append('image', imageRaw);\n      const response = await fetch(`http://localhost:5001/image?message=${encodeURIComponent(selectedOption)}`, {\n        method: 'POST',\n        body: formData, // FormData automatically sets the correct headers\n        credentials: 'include',\n      });\n      const data = await response.json();\n      console.log('Raw Response:', data);\n      if (data.content.options && typeof data.content.options === 'object') {\n        console.log('Options:', data.content.options);\n        data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n      }\n      setData(data.content);\n      setLoading(false);\n      return;\n    }\n    if (isLast) {\n      setUserInput(true);\n      return;\n    }\n    console.log('Fetching question...', selectedOption);\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message: selectedOption // Send the selected option as a JSON object\n      },{ withCredentials: true });\n  \n      // Process options if they are an object\n      const data = response.data;\n      console.log('Raw Response:', data);\n      if (data.content.options && typeof data.content.options === 'object') {\n        console.log('Options:', data.content.options);\n        data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n      }\n      setData(data.content); // Update the state with the processed data\n      setIsLast(data.isLast);\n      console.log('Processed Response:', data);\n    } catch (error) {\n      console.error('Error fetching question:', error);\n    }\n    setLoading(false);\n  };\n\n  const progress = (optionClicked / totalQuestions) * 100;\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    const reader = new FileReader();\n    setImageRaw(file);\n    reader.onload = (e) => {\n      setImageData(e.target.result); // Base64 encoded image data\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleImageSubmit = async () => {\n    setLoading(true);\n    setImage(false);\n    if (imageRaw) {\n      // Create a FormData object to hold the image data\n      const formData = new FormData();\n      formData.append('image', imageRaw); // 'image' is the key expected by the Flask backend\n      console.log(imageRaw instanceof File);\n      try {\n        // Send the image data to the Flask backend\n        const response = await fetch('http://localhost:5001/image', {\n          method: 'POST',\n          body: formData, // FormData automatically sets the correct headers\n          credentials: 'include',\n        });\n        \n  \n        if (!response.ok) {\n          console.error('Failed to send image data');\n          console.log(await response.json()); // Log the backend response for debugging\n          return;\n        }\n        const data = await response.json();\n        console.log(data);\n        if (data.content.options && typeof data.content.options === 'object') {\n          console.log('Options:', data.content.options);\n          data.content.options = Object.entries(data.content.options).map(([key, value]) => `${value}`);\n        }\n        console.log(data.content);\n        setData(data.content);\n        setImageFlag(true);\n        setLoading(false);\n        console.log(data)\n        console.log('Image successfully sent');\n      } catch (error) {\n        console.error('Error sending image data:', error);\n      }\n    }\n  };\n\n  const handleOptionClick = async (option) => {\n    setUserOption(option);\n    setOptionClicked((prev) => prev + 1);\n    if (option !== null && option !== undefined) {\n      console.log(`Option selected: ${option}`);\n      await fetchQuestion(option); // Proceed to the next step only if option is valid\n    } else {\n      console.log(`Option selected: ${option}`);\n      await fetchQuestion();\n    }\n  };\n\n  const handleQuestion = async () => {\n    setImage(false);\n    setShowDomainTestPopup(false);\n    await fetchQuestion('start');\n    // setUserInput(true);\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n      <GiftBox />\n      <Modal open={open} onClose={handleClose} className='modal-container'>\n          { image ? (\n            <ImageUploadCard imageData={imageData} handleDrop={handleDrop} \n            handleImageSubmit={handleImageSubmit} handleQuestion={handleQuestion}/>\n          ) : userInput ? (\n            <UserInput handleSend={handleSendMessage} />\n          )\n          : loading ? (\n            <LoadingPage />\n          ) : data ? (\n            data.recommended_domains ? (\n              <ListCard guesses={data.recommended_domains} />\n            ):(\n              <animated.div style={questionCardAnimation}>\n              <QuestionCard\n                question={data.chat}\n                options={data.options}\n                handleOptionClick={handleOptionClick}\n                progress={progress}\n              />\n              </animated.div>\n            )\n          ) : showDomainTestPopup ? (\n            <DomainTestCard handleClose={handleClose} handleQuestion={handleQuestion}/>\n          ) : (\n            <Typography>Loading...</Typography>\n          )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}